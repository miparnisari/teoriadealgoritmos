#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\setmonofont{Consolas} %to be used with XeLaTeX or LuaLaTeX
\definecolor{bluekeywords}{rgb}{0,0,1}
\definecolor{greencomments}{rgb}{0,0.5,0}
\definecolor{redstrings}{rgb}{0.64,0.08,0.08}
\definecolor{xmlcomments}{rgb}{0.5,0.5,0.5}
\definecolor{types}{rgb}{0.17,0.57,0.68}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman Segoe UI
\font_sans default
\font_typewriter Consolas
\font_math auto
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Teoria de Algoritmos"
\pdf_author "Maria Ines Parnisari"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "basicstyle={\ttfamily\small},breakatwhitespace=true,breaklines=true,commentstyle={\color{greencomments}},frame=lines,keywordstyle={\color{bluekeywords}},language=csh,morekeywords={partial, var, value, get, set, public, private, void, return, class, enum, struct, virtual, double, int, char, string, const},showspaces=false,showtabs=false,stringstyle={\color{redstrings}}"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Punto 2: problema del inventario
\end_layout

\begin_layout Subsection
Enunciado
\end_layout

\begin_layout Standard
Somos dueños de una concesionaria que vende camiones, y contamos con prediccione
s de ventas para los próximos 
\begin_inset Formula $n$
\end_inset

 meses.
 Para simplificar, asumimos que todas las ventas mensuales y compras se
 producen el primer día del mes, y que los camiones que no se vendieron
 deben almacenarse en un depósito hasta el primer día del próximo mes.
\end_layout

\begin_layout Itemize
\begin_inset Formula $d_{i}$
\end_inset

 representa la cantidad de camiones que se esperan vender en el i-esimo
 mes.
\end_layout

\begin_layout Itemize
El depósito tiene capacidad para almacenar hasta 
\begin_inset Formula $S$
\end_inset

 camiones.
\end_layout

\begin_layout Itemize
El costo de almacenar un camión es 
\begin_inset Formula $C$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Para comprar camiones se debe librar una orden de compra, y por cada orden
 librada se debe pagar una tasa fija 
\begin_inset Formula $K$
\end_inset

, independientemente de la cantidad de camiones ordenados.
 En el momento inicial, antes del inicio del primer mes, no hay ningún camión
 almacenado en el depósito.
 
\end_layout

\begin_layout Standard

\emph on
Pista: Al finalizar el mes 
\begin_inset Formula $n$
\end_inset

 no debe quedar ningún camión en el depósito.
\end_layout

\begin_layout Subsection
Ejercicios
\end_layout

\begin_layout Enumerate
Diseñar e implementar un algoritmo por programación dinámica, que determine
 cuando y por que cantidad de camiones se deben liberar cada orden de compra,
 con el objetivo de satisfacer la demanda mensual esperada 
\begin_inset Formula $d_{i}$
\end_inset

 y al mismo tiempo minimizar el costo total de todas las operaciones.
 El orden del algoritmo debe ser polinomial en la cantidad de meses (
\begin_inset Formula $n$
\end_inset

) y la capacidad máxima del depósito (
\begin_inset Formula $S$
\end_inset

) .
\end_layout

\begin_layout Enumerate
Especificar las ecuaciones de recurrencia, los casos bases, y como rastrear
 la solución a partir de la tabla.
 
\end_layout

\begin_layout Enumerate
Calcular el orden del algoritmo.
\end_layout

\begin_layout Subsection
Resolución
\end_layout

\begin_layout Standard
Hipótesis: 
\begin_inset Formula $S\geq d_{1}$
\end_inset

.
 Si no, no se podría satisfacer la demanda del período 1.
\end_layout

\begin_layout Standard
Modelo: periodic review con demanda variable
\end_layout

\begin_layout Standard
The key to developing an efficient algorithm for finding an optimal inventory
 policy for the above model is the following insight into the nature of
 an optimal policy.
 An optimal policy buys only when the inventory level is zero.
 If it didn't, we would be paying more en concepto de costo variable (
\begin_inset Formula $C$
\end_inset

).
 This implies that the only choices for the amount bought at the beginning
 of the ith period are 0, 
\begin_inset Formula $d_{i}$
\end_inset

, 
\begin_inset Formula $d_{i}+d_{i+1}$
\end_inset

 ,...
 o 
\begin_inset Formula $d_{i}+d_{i+1}+\cdots+d_{n}$
\end_inset

.
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula 
\[
C_{i}=\mbox{costo total óptimo para el período \ensuremath{i}, \ensuremath{i\in[1,\ldots,n]}}
\]

\end_inset


\end_layout

\begin_layout Standard
Los valores de 
\begin_inset Formula $C_{i}$
\end_inset

 pueden obtenerse desde el último período hasta el primero.
\end_layout

\begin_layout Itemize
\begin_inset Formula $C_{n}=K$
\end_inset


\end_layout

\end_body
\end_document
