periods = workbook["MainSheet"].Cells[3, 5].Value
for i in range(1,periods+1): #column index
	for j in range(1,periods+1): #row index
		if (j>i):
			#getting rid of infeasible solutions
			workbook["MainSheet"].Cells[i+2, j+12].Value="X"
		else:
			if ((j==1)&(i==1)):
				workbook["MainSheet"].Cells[i+2, j+12].Value=workbook["MainSheet"].Cells[i+2, 7].Value
				workbook["MainSheet"].Cells[i+2, 19].Value=workbook["MainSheet"].Cells[i+2, j+12].Value
			else:     
				if (i==j): #if a diagonal element
					lastmin = MIN(CellRange(workbook["MainSheet"].Cells[i+1, 13],workbook["MainSheet"].Cells[i+1, 18])) #stores the minimum for the last column
					workbook["MainSheet"].Cells[i+2, j+12].Value=lastmin + workbook["MainSheet"].Cells[i+2, 7].Value #second part is the setup cost
					newlastmin = MIN(CellRange(workbook["MainSheet"].Cells[i+2, 13],workbook["MainSheet"].Cells[i+2, 18])) #stores the minimum for the last column
					workbook["MainSheet"].Cells[i+2, 19].Value=newlastmin
				else:
					#if not on the diagonal and is on the upper triangle
					workbook["MainSheet"].Cells[i+2, j+12].Value=workbook["MainSheet"].Cells[i+1, j+12].Value+(i-j)*(workbook["MainSheet"].Cells[i+2, 8].Value)*(workbook["MainSheet"].Cells[i+2, 6].Value) #(i-1)*demand*holdingcost

# Now we find the production schedule                    
i=periods
ResultsArray=""

while (i>=1):  
	mincostindex=i
	for j in reversed(range(1,periods+1)): 
		if (workbook["MainSheet"].Cells[i+2, j+12].Value<workbook["MainSheet"].Cells[i+2, mincostindex+12].Value): #stores the minimum for the last column
			mincostindex=j
	workbook["MainSheet"].Cells[9, mincostindex+12].Value="†Pay setup cost†"
	ResultsArray=str(mincostindex) + " " + ResultsArray
	i=mincostindex-1
print "The optimal solution is to pay the setup cost at stages: ", ResultsArray